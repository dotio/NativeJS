// get winning num
function getRandomNum(min, max) {
	return Math.floor(Math.random() * (max - min + 1) + min);
}
// Game values
let min = 1,
	max = 10,
	winningNum = getRandomNum(min, max),
	guessesLeft = 3;

// UI values	
const UIGame = document.querySelector('.container');
const UIMinNum = document.querySelector('.min-num');
const UIMaxNum = document.querySelector('.max-num');
const UIInputNum = document.querySelector('#number');
const UISubmitBtn = document.querySelector('#play');

// UX value
const UXMessage = document.querySelector('.message');

// Assign UI min & max
UIMinNum.textContent = min;
UIMaxNum.textContent = max;

// play again event
UIGame.addEventListener('mousedown', (e) => {
	if (e.target.classList.contains('play-again')) {
		window.location.reload();
	}
})

// set message
function setMessage(msg, color) {
	UXMessage.style.color = color;
	UXMessage.textContent = msg;
}

// game over
function gameOver(won, msg) {
	let color;
	won === true ? color = '#3DB8B8' : color = '#B0463B'
	//disabled input
	UIInputNum.disabled = true;
	// border green
	UIInputNum.style.border = `3px solid ${color}`;
	// message color
	UXMessage.style.color = color;
	// set msg
	setMessage(msg);

	// play again
	UISubmitBtn.textContent = 'Play Again';
	UISubmitBtn.classList.add('play-again');
}

// listen for submit
UISubmitBtn.addEventListener('click', () => {

	let guess = (UIInputNum.value) * 1;


	// check if won
	if (guess === winningNum) {
		// Game over - won
		gameOver(true, `${winningNum} is correct, You win! `);

	} else {

		// wrong number
		guessesLeft -= 1;

		if (guessesLeft === 0) {
			// game over
			gameOver(false, `Game over, you lost. the correct number was ${winningNum}`);

		} else {

			// border green
			UIInputNum.style.border = '3px solid #B0463B';
			// clear input
			UIInputNum.value = '';
			// game continues
			setMessage(`${guess} is not correct, ${guessesLeft} guesses left`, '#B0463B');
		}
	}
});