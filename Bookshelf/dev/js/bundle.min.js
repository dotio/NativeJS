// init vars
const submitBtn = document.querySelector('#submitBtn');
const UITitle = document.querySelector('#title');
const UIAuthor = document.querySelector('#author');
const UIIsbn = document.querySelector('#isbn');
const UXBookList = document.querySelector('#book-list');

// Book constructor
class Book {
	constructor(title, author, isbn) {
		this.title = title;
		this.author = author;
		this.isbn = isbn;
	}
}

// UI constructor
class UI {
	// add book methods
	addBookList(book) {
		const row = document.createElement('tr');
		row.innerHTML = `
			<td>${book.title}</td>
			<td>${book.author}</td>
			<td>${book.isbn}</td>
			<td><a href='#' class='delete'>x</a></td>
		`;
		UXBookList.appendChild(row);
	}

	clearFields() {
		UITitle.value = '';
		UIAuthor.value = '';
		UIIsbn.value = '';
	}

	showAlert(msg, className) {
		const div = document.createElement('div');
		div.className = `alert ${className}`;
		div.appendChild(document.createTextNode(msg));
		const h1 = document.querySelector('h1');
		h1.appendChild(div);
		setTimeout(() => {
			document.querySelector('.alert').remove();
		}, 2000);
	}

	deleteBook(target) {
		if (target.parentElement.firstElementChild) {
			target.parentElement.parentElement.remove()
		}
	}
}
// Local Storage constructor
class Store {
	static getBooks() {
		let books;
		if (localStorage.getItem('books') === null) {
			books = [];
		} else {
			books = JSON.parse(localStorage.getItem('books'));
		}
		return books;
	}
	static displayBooks() {
		const books = Store.getBooks();

		books.forEach(book => {
			const ui = new UI();
			ui.addBookList(book);
		});
	}
	static addBook(book) {
		const books = Store.getBooks();
		books.push(book);

		localStorage.setItem('books', JSON.stringify(books));
	}
	static removeBook(isbn) {
		const books = Store.getBooks();

		books.forEach((book, ind) => {
			if (book.isbn === isbn) {
				books.splice(ind, 1)
			}
		});
		localStorage.setItem('books', JSON.stringify(books));

	}
}

// Dom load event
document.addEventListener('DOMContentLoaded', Store.displayBooks);

// Event add book
submitBtn.addEventListener('click', (e) => {

	const title = UITitle.value;
	const author = UIAuthor.value;
	const isbn = UIIsbn.value;

	const book = new Book(title, author, isbn);
	const ui = new UI();

	if (title === '' || author === '' || isbn === '') {
		ui.showAlert('Please, fill in all fields', 'error');
	} else {
		ui.addBookList(book);
		// LS add
		Store.addBook(book);

		ui.showAlert('Book Added!', 'success');
		ui.clearFields();
	}
	e.preventDefault();
});

// event delete book
UXBookList.addEventListener('click', (e) => {

	const ui = new UI();
	ui.deleteBook(e.target);
	//remove LS
	Store.removeBook(e.target.parentElement.previousElementSibling.textContent);
	ui.showAlert('Book  removed!', 'success');

	e.preventDefault();
})